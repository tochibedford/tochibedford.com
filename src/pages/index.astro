---
import HeroLayout from "../layouts/HeroLayout.astro";
import MatterWorld from "../components/MatterWorld.astro";
import { works } from "../staticData";
import WorkItem from "../components/WorkItem.astro";
---

<HeroLayout>
  <main class="py-10 sm:px-10 sm:p-10 text-left ubuntu_mono_font">
    <section class="px-2 lg:px-16 md:px-8 text-xl">
      <div class="w-16 h-16 overflow-hidden rounded-md float-left my-1 mr-2">
        <img src="/tochi.jpg" alt="profile image" class="saturate-0" />
      </div>
       I am a developer based in Lagos, Nigeria working on web apps, tools and
      services for everyday consumers and other developers like myself. I am an
      open-source contributor, especially when it comes to <a
        class="font-bold underline"
        href="/tools">tools I use</a
      >.
      <br />
       I've worked on everything from consumer facing production-ready
      applications with thousands of users to hobby tools and templates used by
      a few dozen people, check out my highlights below.
    </section>
    <h2
      class="lg:px-8 md:px-0 md:text-left text-center px-2 mt-10 vina_font text-5xl py-5 text-tMenuDark"
    >
      highlights
    </h2>
    <section class="lg:px-8 md:px-0 px-2 overflow-auto py-2 text-left">
      <div id="highlightsSection" class="isolate group">
        {
          works.map((work, index, arr) => {
            return <WorkItem work={work} index={index} arr={arr} />;
          })
        }
      </div>
    </section>
    <section class="lg:px-8 md:px-0 px-2 pt-5 relative">
      <div class="relative">
        <MatterWorld />
        <div
          id="nunText"
          class="uppsercase opacity-0 pointer-events-none absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-5xl font-bold text-center"
        >
          NUN' TOO MUCH
        </div>
        <div
          id="hitMeUpText"
          class="opacity-0 uppercase pointer-events-none absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-5xl font-bold text-center"
        >
          Hit Me Up
        </div>
        <div
          aria-label="tochibedford.work@gmail.com"
          id="emailText"
          class="opacity-0 pointer-events-none absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 sm:text-5xl text-3xl font-bold text-center"
        >
          tochibedford.work [at] gmail.com
        </div>
        <div
          aria-label="tochibedford.work@gmail.com"
          id="emailText"
          class="pointer-events-none rotate-180 origin-center absolute left-1/2 -translate-x-1/2 bottom-20 w-full text-5xl font-bold text-center"
        >
          <span class="animate-bounce inline-block text-5xl font-normal mx-auto"
            >^</span
          >
        </div>
      </div>
      <div class="w-max mt-5 mx-auto">
        <button
          class="p-2 text-2xl border-tBlack border rounded-lg hover:scale-95 transition-transform relative"
          id="copyButton"
        >
          <span id="copyText" class="inline-block">Copy E-mail</span>
          <span
            id="okText"
            class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 select-none inline-block opacity-0"
            >✅</span
          >
        </button>
        <a
          href="mailto:tochibedford.work@gmail.com?subject=Hey%20Tochi%20👋🏽"
          class="inline-block p-2 text-2xl border-tBlack border bg-tBlack text-tWhite rounded-lg hover:scale-95 transition-transform"
          id="sendButton">Send E-mail</a
        >
      </div>
    </section>
  </main>
</HeroLayout>

<script>
  const highlightsSection = document.getElementById("highlightsSection");
  const workItems = document.querySelectorAll<HTMLDivElement>(
    ".highlightedWorkItem"
  );

  const animationFrame = () => {
    if (highlightsSection && highlightsSection?.matches(":hover")) {
      workItems.forEach((item) => {
        item.style.scale = "1";
        item.style.opacity = "1";
        item.style.height = "auto";
      });
    } else {
      highlightsSection?.scrollTo({
        top: 0,
        left: 0,
        behavior: "smooth",
      });
      workItems.forEach((item) => {
        const minScale = item.getAttribute("data-min-scale")!;
        const minOpacity = item.getAttribute("data-min-opacity")!;
        item.style.height = "16rem";
        item.style.scale = minScale;
        item.style.opacity = minOpacity;
      });
    }
    requestAnimationFrame(animationFrame);
  };
  requestAnimationFrame(animationFrame);
</script>

<script>
  import { gsap } from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  const tl = gsap.timeline({
    scrollTrigger: {
      trigger: "#nunText",
    },
  });
  tl.fromTo(
    "#nunText",
    { x: -50, opacity: 0 },
    { x: 0, opacity: 1, delay: 2, duration: 0.5 }
  )
    .to("#nunText", {
      y: -50,
      opacity: 0,
      delay: 3,
      duration: 0.5,
    })
    .fromTo(
      "#hitMeUpText",
      {
        y: 50,
      },
      {
        y: 0,
        opacity: 1,
        duration: 0.3,
      },
      "-=0.5"
    )
    .to("#hitMeUpText", {
      y: -50,
      opacity: 0,
      duration: 0.3,
      delay: 2,
    })
    .fromTo(
      "#emailText",
      {
        y: 50,
      },
      {
        y: 0,
        opacity: 1,
        duration: 0.3,
      },
      "-=0.3"
    );
</script>

<script>
  import { gsap } from "gsap";
  const copyButtonClicked = gsap.timeline({
    onComplete: () => {
      copyButton.disabled = true;
    },
    onReverseComplete: () => {
      copyButton.disabled = false;
    },
  });

  const copyButton = document.querySelector<HTMLButtonElement>("#copyButton")!;
  const copyText = document.querySelector<HTMLButtonElement>("#copyText")!;
  const okText = document.querySelector<HTMLButtonElement>("#okText")!;
  copyButtonClicked
    .to(copyText, {
      y: -20,
      opacity: 0,
      duration: 0.1,
      ease: "expo.inOut",
      onComplete: () => {
        copyText.hidden = true;
      },
    })
    .fromTo(
      okText,
      {
        y: 20,
        ease: "expo.inOut",
      },
      {
        y: 0,
        opacity: 1,
        duration: 0.1,
        ease: "expo.inOut",
        onReverseComplete: () => {
          copyText.hidden = false;
        },
      }
    )
    .pause();
  copyButton.onclick = () => {
    navigator.clipboard
      .writeText("tochibedford.work@gmail.com")
      .then(() => {
        copyButtonClicked.play();
        setTimeout(() => {
          copyButtonClicked.reverse();
        }, 3000);
      })
      .catch((res) => {
        console.error(res);
      });
  };
</script>
