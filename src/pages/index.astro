---
import HeroLayout from "../layouts/HeroLayout.astro";
import { works } from "../staticData";
---

<HeroLayout>
  <main class="p-10 md:px-32 text-justify ubuntu_mono_font">
    <section class="px-16 text-xl">
      <div class="w-16 h-16 overflow-hidden rounded-md float-left my-1 mr-2">
        <img src="/tochi.jpg" alt="profile image" class="saturate-0" />
      </div>
       I am a developer based in Lagos, Nigeria working on web apps, tools and
      services for consumers and other developers like my self. I am an
      open-source contrbutor, especially when it comes to to <a
        class="font-bold underline"
        href="/tools">tools I use</a
      >.
      <br />
       I've worked on everything from consumer facing production-ready
      applications to hobby tools and templates used by a few dozen people,
      check out my highlights below.
    </section>
    <h2
      class="px-32 mt-10 vina_font text-5xl py-5 text-tMenuDark sticky top-0 z-10"
    >
      highlights
    </h2>
    <section class="px-32 h-[500px] overflow-auto py-2">
      <div id="highlightsSection" class="isolate group">
        {
          works.map((work, index, arr) => {
            return (
              <div
                class={
                  "highlightedWorkItem min-h-64 rounded-md shadow-md relative bg-tWhiteBrighter transition-all p-10 flex flex-col gap-3" +
                  (index !== arr.length - 1 //applies to everything but last element
                    ? " border border-b-tMenuBack "
                    : "") +
                  (index !== 0 ? ` -mt-56 group-hover:mt-4 ` : "") + //applies to everything but first element
                  (index === 0 ? ` group isFirst ` : "") //applies to only first element
                }
                data-min-scale={1 - (index / (arr.length - 1)) * (1 - 0.95)}
                data-min-opacity={1 - (index / (arr.length - 1)) * (1 - 0.25)}
                style={`z-index: ${3 - index};`}
              >
                <div class="text-8xl font-bold uppercase text-tBlack text-left whitespace-nowrap">
                  {work.title}
                </div>
                <div class="text-xl">{work.desc}</div>
                <div>
                  Links:
                  {work.links.map((link) => {
                    return (
                      <a href={link.url} target="_blank" class="group/link">
                        <span class=" bg-tBlack text-tWhite px-2 rounded-md group-hover/link:scale-110 inline-block transition-transform">
                          {link.state}
                        </span>
                      </a>
                    );
                  })}
                </div>
                <div class="absolute bottom-0 right-0 p-2 bg-tBlack text-tWhite rounded-tl-md rounded-br-md opacity-0 group-hover:opacity-100 group-[.isFirst]:opacity-100 transition-opacity">
                  {work.tools.join(", ")}
                </div>
              </div>
            );
          })
        }
      </div>
    </section>
  </main>
</HeroLayout>

<script>
  const highlightsSection = document.getElementById("highlightsSection");
  const workItems = document.querySelectorAll<HTMLDivElement>(
    ".highlightedWorkItem"
  );

  const animationFrame = () => {
    if (highlightsSection && highlightsSection?.matches(":hover")) {
      workItems.forEach((item) => {
        item.style.scale = "1";
        item.style.opacity = "1";
      });
    } else {
      highlightsSection?.scrollTo({ top: 0, left: 0, behavior: "smooth" });
      workItems.forEach((item) => {
        const minScale = item.getAttribute("data-min-scale")!;
        const minOpacity = item.getAttribute("data-min-opacity")!;
        item.style.scale = minScale;
        item.style.opacity = minOpacity;
      });
    }
    requestAnimationFrame(animationFrame);
  };

  requestAnimationFrame(animationFrame);
</script>
